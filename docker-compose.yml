---
version: '3.7'

networks:
  monitoring:
    ipam:
      driver: default
      config:
        - subnet: "172.19.0.0/16"

volumes:
  es-data:
  kibana:
  tsdb:
  log:

services:
  prometheus:
    image: prom/prometheus:v2.29.1
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - tsdb:/prometheus
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    logging:
      driver: "fluentd"
      options:
        tag: docker.prometheus
        fluentd-address: localhost:24224
    depends_on:
      - elasticsearch
      - kibana
      - fluentd
    ports:
      - "127.0.0.1:9090:9090"
    networks:
      monitoring:
        ipv4_address: 172.19.0.2

  alertmanager:
    image: prom/alertmanager:v0.22.2
    container_name: alertmanager
    restart: always
    volumes:
      - ./alertmanager/:/etc/alertmanager:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    logging:
      driver: "fluentd"
      options:
        tag: docker.alertmanager
        fluentd-address: localhost:24224
    depends_on:
      - elasticsearch
      - kibana
      - fluentd
    ports:
      - "127.0.0.1:9093:9093"
    networks:
      monitoring:
        ipv4_address: 172.19.0.3

  grafana:
    image: grafana/grafana:8.1.2
    container_name: grafana
    restart: always
    volumes:
      - ./grafana/etc/:/etc/grafana/
      - ./grafana/var/:/var/lib/grafana/
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "fluentd"
      options:
        tag: docker.grafana
        fluentd-address: localhost:24224
    depends_on:
      - elasticsearch
      - kibana
      - fluentd
      - prometheus
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      monitoring:
        ipv4_address: 172.19.0.4

  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: node
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    logging:
      driver: "fluentd"
      options:
        tag: docker.node
        fluentd-address: localhost:24224
    depends_on:
      - prometheus
      - elasticsearch
      - kibana
      - fluentd
    ports:
      - "127.0.0.1:9100:9100"
    networks:
      monitoring:
        ipv4_address: 172.19.0.5

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.40.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      monitoring:
        ipv4_address: 172.19.0.6

  redis:
    image: redis:6.2.5
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      monitoring:
        ipv4_address: 172.19.0.7

  nginx:
    image: nginx:1.21.1-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/log/nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; \
              nginx -s reload; done & nginx -g \"daemon off;\"'"
    logging:
      driver: "fluentd"
      options:
        tag: docker.nginx
        fluentd-address: localhost:24224
    depends_on:
      - elasticsearch
      - kibana
      - fluentd
    networks:
      monitoring:
        ipv4_address: 172.19.0.8

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    restart: always
    environment:
      discovery.type: single-node
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluentd
    networks:
      monitoring:
        ipv4_address: 172.19.0.9

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.1
    restart: always
    volumes:
      - kibana:/usr/share/kibana
    #ports:
    #  - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluentd
    networks:
      monitoring:
        ipv4_address: 172.19.0.10

  fluentd:
    container_name: fluentd
    build:
      context: ./fluentd
      dockerfile: Dockerfile
    restart: always
    environment:
      FLUENTD_CONF: fluentd.conf
    ports:
      - "5140:5140"
      - "5140:5140/udp"
      - "24224:24224"
      - "24224:24224/udp"
      - "9880:9880"
    volumes:
      - log:/fluentd/log
      - ./fluentd/conf/fluentd.conf:/fluentd/etc/fluentd.conf
    networks:
      monitoring:
        ipv4_address: 172.19.0.11
